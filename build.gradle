plugins {
	id 'fabric-loom' version '1.9.+'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

fabricApi {
	configureDataGeneration()
}

loom {
	mods {
		"biomecompass" {
			sourceSet sourceSets.main
		}
	}
}

repositories {
	maven { // Polymer, SGUI, Server Translations API
		name = 'NucleoidMC'
		url = 'https://maven.nucleoid.xyz'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// SGUI
	modImplementation include("eu.pb4:sgui:${project.sgui_version}")
	
	// Polymer
	modImplementation include("eu.pb4:polymer-core:${project.polymer_version}")
	// Server Translations API
	modImplementation include("xyz.nucleoid:server-translations-api:${project.stapi_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}

	into("data/biomecompass/lang") {
		from("src/main/resources/assets/biomecompass/lang")
	}
}